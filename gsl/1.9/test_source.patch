--- sort/test_source.c	2005-09-13 04:43:47.000000000 -0500
+++ /home/swanson/acaprez/tmp/gsl-1.11/sort/test_source.c	2008-02-09 13:49:43.000000000 -0600
@@ -1,10 +1,10 @@
 /* sort/test_source.c
  * 
- * Copyright (C) 1996, 1997, 1998, 1999, 2000 Thomas Walter, Brian Gough
+ * Copyright (C) 1996, 1997, 1998, 1999, 2000, 2007 Thomas Walter, Brian Gough
  * 
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or (at
+ * the Free Software Foundation; either version 3 of the License, or (at
  * your option) any later version.
  * 
  * This program is distributed in the hope that it will be useful, but
@@ -159,7 +159,8 @@
 FUNCTION (my, initialize) (TYPE (gsl_vector) * v)
 {
   size_t i;
-  ATOMIC k = 0, kk;
+  ATOMIC k = 0;
+  volatile ATOMIC kk;
 
   /* Must be sorted initially */
 
@@ -167,8 +168,8 @@
     {
       kk = k;
       k++;
-      if (k < kk)               /* prevent overflow */
-        k = kk;
+      /* Prevent overflow */
+      if (k < kk) k = kk;
       FUNCTION (gsl_vector, set) (v, i, k);
     }
 }
@@ -194,6 +195,16 @@
     {
       if (FUNCTION (gsl_vector, get) (data, i) != FUNCTION (gsl_vector, get) (orig, i))
         {
+#if DUMP_ERROR
+          size_t j;
+          for (j = 0 ; j < data->size; j++) {
+            printf("%u: " OUT_FORMAT " " OUT_FORMAT " %c\n", j,
+                   FUNCTION (gsl_vector, get) (data, j),
+                   FUNCTION (gsl_vector, get) (orig, j),
+                   (i == j) ? '*' : ' ');
+          }
+#endif
+
           return GSL_FAILURE;
         }
     }
