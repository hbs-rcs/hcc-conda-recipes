--- apc_cenote1.pl.old	2020-03-26 13:31:54.978599942 -0500
+++ apc_cenote1.pl	2020-03-26 13:33:50.096997492 -0500
@@ -1,4 +1,4 @@
-#!/bin/perl
+#!/opt/anaconda1anaconda2anaconda3/bin/perl
 
 # AUTHOR: Joseph Fass
 # 
@@ -61,10 +61,10 @@
     print SEQ $block;
     close SEQ;
     print "formatting LAST db ... ";
-    $command = "$opt_c/last-1047/src/lastdb temp.apc temp.apc.fa";  # format lastdb for current contig
+    $command = "lastdb temp.apc temp.apc.fa";  # format lastdb for current contig
     system($command);
     print "running LAST self-alignment ... ";
-    $command = "$opt_c/last-1047/src/lastal -s 1 -x 300 -f 0 -T 1 temp.apc temp.apc.fa > temp.apc.lastal";  # self align current contig
+    $command = "lastal -s 1 -x 300 -f 0 -T 1 temp.apc temp.apc.fa > temp.apc.lastal";  # self align current contig
     system($command);
     print "done\n";
     # pull in output of current contig's LAST self-alignment
--- blastpreport2tbl_mt_annotation_pipe_biowulf2.pl.old	2020-03-26 13:34:28.689130758 -0500
+++ blastpreport2tbl_mt_annotation_pipe_biowulf2.pl	2020-03-26 13:35:04.316253782 -0500
@@ -1,4 +1,4 @@
-#!/bin/perl
+#!/opt/anaconda1anaconda2anaconda3/bin/perl
 use strict;
 use warnings;
 use File::Find;
@@ -39,4 +39,4 @@
 
 		}
 	}
-}
\ No newline at end of file
+}
--- cenote-fixer1.sh.old	2020-03-26 14:11:04.123709663 -0500
+++ cenote-fixer1.sh	2020-03-26 14:21:53.684948965 -0500
@@ -9,7 +9,7 @@
 	cp *.fsa cenote_fixer_sequin/
 	cp *.cmt cenote_fixer_sequin/
 	cp *.tbl cenote_fixer_sequin/
-	$HOME/tbl2asn -V vb -t $template_file -X C -p cenote_fixer_sequin/ ;
+	tbl2asn -V vb -t $template_file -X C -p cenote_fixer_sequin/ ;
 elif [[ $fix_type = "-rotated" ]] ; then
 	cp *.fsa cenote_fixer_sequin/
 	cp *.cmt cenote_fixer_sequin/
@@ -52,7 +52,7 @@
 
 
 		done
-		$HOME/tbl2asn -V vb -t $template_file -X C -p cenote_fixer_sequin/ ;
+		tbl2asn -V vb -t $template_file -X C -p cenote_fixer_sequin/ ;
 
 	done
 fi
--- cenote-taker2.0.1.sh.old	2020-03-26 14:11:04.125709669 -0500
+++ cenote-taker2.0.1.sh	2020-03-26 15:30:58.505931447 -0500
@@ -88,9 +88,9 @@
 
 if [ "${SCRATCH_DIR}" == "none" ] ; then
 	echo "scratch space will not be used in this run"
-	CD_HHSUITE="${CENOTE_SCRIPT_DIR}/NCBI_CD/NCBI_CD"
-	PFAM_HHSUITE="${CENOTE_SCRIPT_DIR}/pfam_32_db/pfam"
-	PDB_HHSUITE="${CENOTE_SCRIPT_DIR}/pdb70/pdb70"
+	CD_HHSUITE="${CT2_DIR}/NCBI_CD/NCBI_CD"
+	PFAM_HHSUITE="${CT2_DIR}/pfam_32_db/pfam"
+	PDB_HHSUITE="${CT2_DIR}/pdb70/pdb70"
 	echo $CD_HHSUITE
 	echo $PFAM_HHSUITE
 	echo $PDB_HHSUITE
@@ -99,15 +99,15 @@
 	echo "time update: setting up lscratch databases: " $MDYT
 	if [ ! -s ${SCRATCH_DIR}/NCBI_CD/NCBI_CD_a3m.ffdata ] ; then
 		mkdir ${SCRATCH_DIR}/NCBI_CD
-		cp ${CENOTE_SCRIPT_DIR}/NCBI_CD/NCBI_CD* ${SCRATCH_DIR}/NCBI_CD/
+		cp ${CT2_DIR}/NCBI_CD/NCBI_CD* ${SCRATCH_DIR}/NCBI_CD/
 	fi
 	if [ ! -s ${SCRATCH_DIR}/pfam_32_db/pfam_a3m.ffdata ] ; then	
 		mkdir ${SCRATCH_DIR}/pfam_32_db
-		cp ${CENOTE_SCRIPT_DIR}/pfam_32_db/pfam* ${SCRATCH_DIR}/pfam_32_db/
+		cp ${CT2_DIR}/pfam_32_db/pfam* ${SCRATCH_DIR}/pfam_32_db/
 	fi
 	if [ ! -s ${SCRATCH_DIR}/pdb70/pdb70_a3m.ffdata ] ; then		
 		mkdir ${SCRATCH_DIR}/pdb70
-		cp ${CENOTE_SCRIPT_DIR}/pdb70/pdb70* ${SCRATCH_DIR}/pdb70/
+		cp ${CT2_DIR}/pdb70/pdb70* ${SCRATCH_DIR}/pdb70/
 	fi
 	CD_HHSUITE="${SCRATCH_DIR}/NCBI_CD/NCBI_CD"
 	PFAM_HHSUITE="${SCRATCH_DIR}/pfam_32_db/pfam"
@@ -119,13 +119,6 @@
 	exit
 fi
 
-if [[ ":$PATH:" == *":${CENOTE_SCRIPT_DIR}/hh-suite/build/scripts:"* ]] && [[ ":$PATH:" == *":${CENOTE_SCRIPT_DIR}/hh-suite/build/bin:"* ]] ; then 
-	echo "hhsuite is in path" 
-else 
-	export PATH="${CENOTE_SCRIPT_DIR}/hh-suite/build/bin:${CENOTE_SCRIPT_DIR}/hh-suite/build/scripts:$PATH" 
-fi
-
-
 MDYT=$( date +"%m-%d-%y---%T" )
 echo "time update: loading modules: " $MDYT
 
@@ -183,7 +176,7 @@
 	echo "$(tput setaf 5)File with .fasta extension detected, attempting to keep contigs over $LENGTH_MINIMUM nt and find circular sequences with apc.pl$(tput sgr 0)"
 	bioawk -v run_var="$run_title" -v contig_cutoff="$LENGTH_MINIMUM" -c fastx '{ if(length($seq) > contig_cutoff) { print ">"run_var NR" "$name; print $seq }}' $original_contigs > ${original_contigs%.fasta}.over_${LENGTH_MINIMUM}nt.fasta ;
 	cd $run_title
-	perl ${CENOTE_SCRIPT_DIR}/apc_cenote1.pl -b $run_title -c $CENOTE_SCRIPT_DIR ../${original_contigs%.fasta}.over_${LENGTH_MINIMUM}nt.fasta ;
+	apc_cenote1.pl -b $run_title -c $CENOTE_SCRIPT_DIR ../${original_contigs%.fasta}.over_${LENGTH_MINIMUM}nt.fasta ;
 	rm apc_aln*
 	for fa1 in $run_title*.fa ; do 
 		mv $fa1 $run_title${fa1#$run_title.}sta ; 
@@ -191,7 +184,7 @@
 elif [ ${original_contigs: -6} == ".fastg" ]; then
 	bioawk -v contig_cutoff="$LENGTH_MINIMUM" -c fastx '{ if(length($seq) > contig_cutoff) {print }}' $original_contigs | grep "[a-zA-Z0-9]:\|[a-zA-Z0-9];" | grep -v "':" | awk '{ print ">"$1 ; print $2 }' | sed 's/:.*//g; s/;.*//g' | bioawk -v run_var="$run_title" -c fastx '{ print ">"run_var NR" "$name; print $seq }' > ${original_contigs%.fastg}.over_${LENGTH_MINIMUM}nt.fasta
 	cd $run_title
-	perl ${CENOTE_SCRIPT_DIR}/apc_cenote1.pl -b $run_title -c $CENOTE_SCRIPT_DIR ../${original_contigs%.fastg}.over_${LENGTH_MINIMUM}nt.fasta ;
+	apc_cenote1.pl -b $run_title -c $CENOTE_SCRIPT_DIR ../${original_contigs%.fastg}.over_${LENGTH_MINIMUM}nt.fasta ;
 	rm apc_aln*
 	for fa1 in $run_title*.fa ; do 
 		mv $fa1 $run_title${fa1#$run_title.}sta ; 
@@ -292,7 +285,7 @@
 	for NONCIR in $CONTIGS_NON_CIRCULAR ; do
 		LEN_CHECKQ=$( cat $NONCIR | bioawk -c fastx '{ if(length($seq) > 4000) { print $name }}' ) ; 
 		if [ ! -z "$LEN_CHECKQ" ] ; then
-			${CENOTE_SCRIPT_DIR}/irf307.linux.exe $NONCIR 2 3 5 80 10 40 500000 10000 -d -h
+			irf307.linux.exe $NONCIR 2 3 5 80 10 40 500000 10000 -d -h
 		fi
 	done
 	mkdir ../ITR_containing_contigs
@@ -341,12 +334,12 @@
 	done
 		# Taking arguments for "virus specific" database and conducting hmmscan
 	if  [[ $virus_domain_db = "standard" ]] ; then
-		echo "$CONTIGS_NON_CIRCULAR" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.AA.hmmscan.out --cpu 1 -E 1e-8 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/virus_specific_baits_plus_missed6a {}.AA.sorted.fasta
-		echo "$CONTIGS_NON_CIRCULAR" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.AA.hmmscan_replicate.out --cpu 1 -E 1e-15 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/virus_replication_clusters3 {}.AA.sorted.fasta		
+		echo "$CONTIGS_NON_CIRCULAR" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.AA.hmmscan.out --cpu 1 -E 1e-8 ${CT2_DIR}/hmmscan_DBs/virus_specific_baits_plus_missed6a {}.AA.sorted.fasta
+		echo "$CONTIGS_NON_CIRCULAR" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.AA.hmmscan_replicate.out --cpu 1 -E 1e-15 ${CT2_DIR}/hmmscan_DBs/virus_replication_clusters3 {}.AA.sorted.fasta		
 	elif [[ $virus_domain_db = "rna_virus" ]]; then
-		echo "$CONTIGS_NON_CIRCULAR" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.AA.hmmscan.out --cpu 1 -E 1e-8 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/rna_virus_rdrp_capsid_hmms1 {}.AA.sorted.fasta
+		echo "$CONTIGS_NON_CIRCULAR" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.AA.hmmscan.out --cpu 1 -E 1e-8 ${CT2_DIR}/hmmscan_DBs/rna_virus_rdrp_capsid_hmms1 {}.AA.sorted.fasta
 	elif [[ $virus_domain_db = "all_common" ]]; then
-		echo "$CONTIGS_NON_CIRCULAR" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.AA.hmmscan.out --cpu 1 -E 1e-8 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a {}.AA.sorted.fasta
+		echo "$CONTIGS_NON_CIRCULAR" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.AA.hmmscan.out --cpu 1 -E 1e-8 ${CT2_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a {}.AA.sorted.fasta
 	else
 		echo "$(tput setaf 5) Incorrect argument given for virus_domain_db variable. Try -standard, -with_rdrp_retro, -all_common as arguments. For this run, no contigs with viral domains but without circularity or ITRs will be detected $(tput sgr 0)"
 		rm ./*{0..9}.fasta
@@ -459,7 +452,7 @@
 for nucl_fa in $CIRCLES_AND_ITRS ; do
 if [ -s "${nucl_fa%.fasta}.rotate.fasta" ]; then
 	echo "$(tput setaf 5)Guessing taxonomy for sequence "${nucl_fa%.fasta}.rotate.fasta" by BLASTX against virus and plasmid protein database.$(tput sgr 0)"
-	blastx -evalue 1e-4 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/blast_DBs/virus_refseq_adinto_polinto_clean_plasmid_prot_190925 -query ${nucl_fa%.fasta}.rotate.fasta -out ${nucl_fa%.fasta}.tax_guide.blastx.out ;
+	blastx -evalue 1e-4 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CT2_DIR}/blast_DBs/virus_refseq_adinto_polinto_clean_plasmid_prot_190925 -query ${nucl_fa%.fasta}.rotate.fasta -out ${nucl_fa%.fasta}.tax_guide.blastx.out ;
 	if [ ! -s "${nucl_fa%.fasta}.tax_guide.blastx.out" ]; then
 		echo "No homologues found" > ${nucl_fa%.fasta}.tax_guide.blastx.out ;
 	elif grep -i -q "circovir\|genomovir\|geminivir\|nanovir\|redondovir\|bacilladnavir\|smacovir" ${nucl_fa%.fasta}.tax_guide.blastx.out ; then 
@@ -502,7 +495,7 @@
 
 	if grep -i -q "Caudovir\|Ackermannvir\|Herellevir\|Corticovir\|Levivir\|Tectivir\|crAss-like virus\|CrAssphage\|Cyanophage\|Microvir\microphage\|Siphoviridae\|Myoviridae\|phage\|Podovir\|Halovir\|sphaerolipovir\|pleolipovir\|plasmid\|Inovir\|Ampullavir\|Bicaudavir\|Fusellovir\|Guttavir\|Ligamenvir\|Plasmavir\|Salterprovir\|Cystovir" ${nucl_fa%.fasta}.tax_guide.blastx.out ; then
 
-		${CENOTE_SCRIPT_DIR}/PHANOTATE/phanotate.py -f fasta -o ${nucl_fa%.fasta}.phan.fasta ${nucl_fa%.fasta}.rotate.fasta ; 
+		phanotate.py -f fasta -o ${nucl_fa%.fasta}.phan.fasta ${nucl_fa%.fasta}.rotate.fasta ; 
 		if [ "$ENFORCE_START_CODON" == "True" ] ; then
 			sed 's/ /@/g' ${nucl_fa%.fasta}.phan.fasta | bioawk -c fastx '{ print }' | awk '{ if ($2 ~ /^[ATCG]TG/) { print ">"$1 ; print $2 }}' | sed 's/@/ /g' > ${nucl_fa%.fasta}.phan.sort.fasta
 		else
@@ -550,12 +543,12 @@
 if [ -n "$CIRCLES_AND_ITRS" ]; then
 	echo "$(tput setaf 5)Continuing to HMMSCAN (HMMER) of circular/ITR contigs on custom viral conserved protein model database for each ORF...$(tput sgr 0)" 
 	if  [[ $virus_domain_db = "standard" ]] ; then
-		echo "$CIRCLES_AND_ITRS" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.rotate.AA.hmmscan.out --cpu 1 -E 1e-8 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/virus_specific_baits_plus_missed6a {}.rotate.AA.sorted.fasta
-		echo "$CIRCLES_AND_ITRS" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.rotate.AA.hmmscan_replicate.out --cpu 1 -E 1e-15 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/virus_replication_clusters3 {}.rotate.AA.sorted.fasta		
+		echo "$CIRCLES_AND_ITRS" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.rotate.AA.hmmscan.out --cpu 1 -E 1e-8 ${CT2_DIR}/hmmscan_DBs/virus_specific_baits_plus_missed6a {}.rotate.AA.sorted.fasta
+		echo "$CIRCLES_AND_ITRS" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.rotate.AA.hmmscan_replicate.out --cpu 1 -E 1e-15 ${CT2_DIR}/hmmscan_DBs/virus_replication_clusters3 {}.rotate.AA.sorted.fasta		
 	elif [[ $virus_domain_db = "rna_virus" ]]; then
-		echo "$CIRCLES_AND_ITRS" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.rotate.AA.hmmscan.out --cpu 1 -E 1e-8 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/rna_virus_rdrp_capsid_hmms1 {}.rotate.AA.sorted.fasta
+		echo "$CIRCLES_AND_ITRS" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.rotate.AA.hmmscan.out --cpu 1 -E 1e-8 ${CT2_DIR}/hmmscan_DBs/rna_virus_rdrp_capsid_hmms1 {}.rotate.AA.sorted.fasta
 	elif [[ $virus_domain_db = "all_common" ]]; then
-		echo "$CIRCLES_AND_ITRS" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.rotate.AA.hmmscan.out --cpu 1 -E 1e-8 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a {}.rotate.AA.sorted.fasta
+		echo "$CIRCLES_AND_ITRS" | sed 's/.fasta//g' | xargs -n 1 -I {} -P $CPU -t hmmscan --tblout {}.rotate.AA.hmmscan.out --cpu 1 -E 1e-8 ${CT2_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a {}.rotate.AA.sorted.fasta
 	else
 		echo "$(tput setaf 5) Incorrect argument given for virus_domain_db variable. Try standard, rna_virus, all_common as arguments. For this run, no contigs with viral domains but without circularity or ITRs will be detected $(tput sgr 0)"
 		rm ./*{0..9}.fasta
@@ -606,7 +599,7 @@
 			echo "$(tput setaf 4)ORF file for "$nucl_fa" is empty. This circle might have no ORFS over 100AA.$(tput sgr 0)"
 		fi
 		if [ $CIRC_VIRAL_HALLMARK_COUNT -gt $CIRC_MINIMUM_DOMAINS ] || [ $CIRC_VIRAL_HALLMARK_COUNT == $CIRC_MINIMUM_DOMAINS ] ; then
-			hmmscan --tblout ${nucl_fa%.fasta}.rotate.AA.hmmscan2.out --cpu $CPU -E 1e-6 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a ${nucl_fa%.fasta}.rotate.no_hmmscan.fasta
+			hmmscan --tblout ${nucl_fa%.fasta}.rotate.AA.hmmscan2.out --cpu $CPU -E 1e-6 ${CT2_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a ${nucl_fa%.fasta}.rotate.no_hmmscan.fasta
 
 			grep -v "^#" ${nucl_fa%.fasta}.rotate.AA.hmmscan2.out | sed 's/ \+/	/g' | sort -u -k3,3 > ${nucl_fa%.fasta}.rotate.AA.hmmscan2.sort.out
 			if [ ! -z "${nucl_fa%.fasta}.rotate.AA.hmmscan2.sort.out" ] ; then
@@ -712,7 +705,7 @@
 if [ -n "$PROTEIN_NO_HMMSCAN2" ]; then
 
 	echo "$(tput setaf 5) Continuing to RPS-BLAST NCBI CDD domains database for each ORF in viral circular/ITR contigs...$(tput sgr 0)" 
-	echo "$PROTEIN_NO_HMMSCAN2" | sed 's/.rotate.no_hmmscan2.fasta//g' | xargs -n 1 -I {} -P $CPU -t rpsblast -evalue 1e-4 -num_descriptions 5 -num_threads 1 -line_length 100 -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/cdd_rps_db/Cdd -query {}.rotate.no_hmmscan2.fasta -out {}.rotate.AA.rpsblast.out ;
+	echo "$PROTEIN_NO_HMMSCAN2" | sed 's/.rotate.no_hmmscan2.fasta//g' | xargs -n 1 -I {} -P $CPU -t rpsblast -evalue 1e-4 -num_descriptions 5 -num_threads 1 -line_length 100 -num_alignments 1 -db ${CT2_DIR}/cdd_rps_db/Cdd -query {}.rotate.no_hmmscan2.fasta -out {}.rotate.AA.rpsblast.out ;
 	echo "$(tput setaf 5)RPS-BLAST of viral circular/ITR contigs complete.$(tput sgr 0)"
 	echo " "
 else
@@ -725,7 +718,7 @@
 # Generating tbl file from RPS-BLAST results
 echo "$(tput setaf 5) Starting perl script to make tbl from RPS-BLAST output $(tput sgr 0)"
 
-perl ${CENOTE_SCRIPT_DIR}/rpsblastreport2tbl_mt_annotation_pipe_biowulf.pl ;
+rpsblastreport2tbl_mt_annotation_pipe_biowulf.pl ;
 
 for nucl_fa in $NEW_FASTAS ; do 
 if [ -s "${nucl_fa%.fasta}.NT.tbl" ]; then
@@ -746,13 +739,13 @@
 		if grep -q "(plasmid)" ${feat_tbl1%.NT.tbl}.tax_guide.blastx.out ; then
 			if [ -s "${feat_tbl1%.NT.tbl}.rotate.rps_nohits.fasta" ]; then
 				echo "$(tput setaf 5)"$nucl_fa" is likely a plasmid... Continuing to BLASTP NCBI nr database for each ORF that had no hits in CDD...$(tput sgr 0)" 
-				blastp -evalue 1e-4 -num_descriptions 5 -num_threads $CPU -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/blastdb/nr -query ${feat_tbl1%.NT.tbl}.rotate.rps_nohits.fasta -out ${feat_tbl1%.NT.tbl}.rotate.blastp.out ;
+				blastp -evalue 1e-4 -num_descriptions 5 -num_threads $CPU -num_alignments 1 -db ${CT2_DIR}/blastdb/nr -query ${feat_tbl1%.NT.tbl}.rotate.rps_nohits.fasta -out ${feat_tbl1%.NT.tbl}.rotate.blastp.out ;
 				echo "$(tput setaf 5)BLASTP of "${feat_tbl1%.NT.tbl}.rotate.rps_nohits.fasta" complete.$(tput sgr 0)"
 			fi
 		else
 			if [ -s "${feat_tbl1%.NT.tbl}.rotate.rps_nohits.fasta" ]; then
 				echo "$(tput setaf 5)"$nucl_fa" is likely a virus... Continuing to BLASTP NCBI nr database for each ORF that had no hits in CDD...$(tput sgr 0)" 
-				blastp -evalue 1e-4 -num_descriptions 5 -num_threads $CPU -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/blastdb/viral -query ${feat_tbl1%.NT.tbl}.rotate.rps_nohits.fasta -out ${feat_tbl1%.NT.tbl}.rotate.blastp.out ;
+				blastp -evalue 1e-4 -num_descriptions 5 -num_threads $CPU -num_alignments 1 -db ${CT2_DIR}/blastdb/viral -query ${feat_tbl1%.NT.tbl}.rotate.rps_nohits.fasta -out ${feat_tbl1%.NT.tbl}.rotate.blastp.out ;
 				echo "$(tput setaf 5)BLASTP of "${feat_tbl1%.NT.tbl}.rotate.rps_nohits.fasta" complete.$(tput sgr 0)"
 			fi
 		fi
@@ -764,7 +757,7 @@
 # Generating tbl file from BLASTP results
 echo "$(tput setaf 5) Starting perl script to make tbl from BLASTP output $(tput sgr 0)"
 
-perl ${CENOTE_SCRIPT_DIR}/blastpreport2tbl_mt_annotation_pipe_biowulf2.pl ;
+blastpreport2tbl_mt_annotation_pipe_biowulf2.pl ;
 for feat_tbl1 in *.NT.tbl ; do
 if [ -s "${feat_tbl1%.NT.tbl}.BLASTP.tbl" ]; then
 	echo "$(tput setaf 5)"${feat_tbl1%.NT.tbl}": tbl made from BLASTP hits. Splitting fasta files for HHsearch...$(tput sgr 0)"
@@ -971,14 +964,14 @@
 for dark_orf in $dark_orf_list ; do
 	if  [[ $HHSUITE_TOOL = "hhsearch" ]] ; then
 		echo "$(tput setaf 5)Running HHsearch on "$dark_orf" now.$(tput sgr 0)"
-		${CENOTE_SCRIPT_DIR}/hh-suite/build/src/hhsearch -i $dark_orf -d $PDB_HHSUITE -d $PFAM_HHSUITE -d $CD_HHSUITE -o ${dark_orf%.for_hhpred.fasta}.out.hhr -cpu $CPU -maxmem $MEM -p 80 -Z 20 -z 0 -b 0 -B 10 -ssm 2 -sc 1  ;
+		hhsearch -i $dark_orf -d $PDB_HHSUITE -d $PFAM_HHSUITE -d $CD_HHSUITE -o ${dark_orf%.for_hhpred.fasta}.out.hhr -cpu $CPU -maxmem $MEM -p 80 -Z 20 -z 0 -b 0 -B 10 -ssm 2 -sc 1  ;
 		cat ${dark_orf%.for_hhpred.fasta}.out.hhr >> ${dark_orf%.rotate*.for_hhpred.fasta}.rotate.out_all.hhr ;
 		rm ${dark_orf%.for_hhpred.fasta}.out.hhr 
 		cat $dark_orf >> ${dark_orf%.rotate*.for_hhpred.fasta}.all_hhpred_queries.AA.fasta
 		rm $dark_orf
 	elif [[ $HHSUITE_TOOL = "hhblits" ]] ; then
 		echo "$(tput setaf 5)Running HHblits on "$dark_orf" now.$(tput sgr 0)"
-		${CENOTE_SCRIPT_DIR}/hh-suite/build/src/hhblits -i $dark_orf -d $PDB_HHSUITE -d $PFAM_HHSUITE -d $CD_HHSUITE -o ${dark_orf%.for_hhpred.fasta}.out.hhr -cpu $CPU -maxmem $MEM -p 80 -Z 20 -z 0 -b 0 -B 10 -ssm 2 -sc 1  ;
+		hhblits -i $dark_orf -d $PDB_HHSUITE -d $PFAM_HHSUITE -d $CD_HHSUITE -o ${dark_orf%.for_hhpred.fasta}.out.hhr -cpu $CPU -maxmem $MEM -p 80 -Z 20 -z 0 -b 0 -B 10 -ssm 2 -sc 1  ;
 		cat ${dark_orf%.for_hhpred.fasta}.out.hhr >> ${dark_orf%.rotate*.for_hhpred.fasta}.rotate.out_all.hhr ;
 		rm ${dark_orf%.for_hhpred.fasta}.out.hhr 
 		cat $dark_orf >> ${dark_orf%.rotate*.for_hhpred.fasta}.all_hhpred_queries.AA.fasta
@@ -995,7 +988,7 @@
 # Generating tbl file from HHsearch results
 echo "$(tput setaf 5) Starting perl script to make tbl from HHsearch output $(tput sgr 0)"
 
-perl ${CENOTE_SCRIPT_DIR}/hhpredreport2tbl_mt_annotation_pipe_biowulf1_gjs_edits.pl ;
+hhpredreport2tbl_mt_annotation_pipe_biowulf1_gjs_edits.pl ;
 
 for HH_tbl1 in *.HH.tbl ; do 
 sed 's/OS=.*//g; s/ ;//g; s/similar to AA sequence:UniProtKB:>\([0-9][A-Z].*\)/protein motif:PDB:\1/g; s/UniProtKB:>tr|.*|\(.\)/UniProtKB:\1/g; s/similar to AA sequence:UniProtKB:>\([a-z].*\)/protein motif:Scop:\1/g; s/similar to AA sequence:UniProtKB:>\(PF.*\)/protein motif:PFAM:\1/g; s/ is .*//g; s/ are .*//g' $HH_tbl1 | sed '/product/ s/; [a-zA-Z0-9_]\{1,20\}//g; s/;.*//g' > ${HH_tbl1%.HH.tbl}.HH2.tbl
@@ -1089,9 +1082,9 @@
 
 			grep -A1 "$TAX_ORF " ${feat_tbl2%.comb3.tbl}.rotate.AA.sorted.fasta | sed '/--/d' > ${feat_tbl2%.comb3.tbl}.tax_orf.fasta
 			if [[ $STRUCTURAL_COUNT == 1 ]] || [[ $STRUCTURAL_COUNT -gt 1 ]] ; then
-				blastp -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/blast_DBs/virus_adinto_polinton_prot_190925 -query ${feat_tbl2%.comb3.tbl}.tax_orf.fasta -out ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
+				blastp -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CT2_DIR}/blast_DBs/virus_adinto_polinton_prot_190925 -query ${feat_tbl2%.comb3.tbl}.tax_orf.fasta -out ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
 			else
-				blastp -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/blast_DBs/virus_refseq_adinto_polinto_clean_plasmid_prot_190925 -query ${feat_tbl2%.comb3.tbl}.tax_orf.fasta -out ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
+				blastp -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CT2_DIR}/blast_DBs/virus_refseq_adinto_polinto_clean_plasmid_prot_190925 -query ${feat_tbl2%.comb3.tbl}.tax_orf.fasta -out ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
 			fi
 			if [ ! -s "${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out" ]; then
 				echo "unclassified virus" > ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
@@ -1631,18 +1624,18 @@
 if [ ! -z "$LIST_OF_VIRAL_DOMAIN_CONTIGS" ] ;then
 	echo "$(tput setaf 3) Starting annotation of contigs with viral domains but are neither circular nor have ITRs $(tput sgr 0)"
 
-	. ${CENOTE_SCRIPT_DIR}/annotation_of_linear_contigs_prune_seg2.0.1.sh
+	. annotation_of_linear_contigs_prune_seg2.0.1.sh
 fi
 
 # script for sketching contigs without detectable virus domains or circularity or ITRs with RPS-BLAST
 if  [[ $handle_nonviral = "sketch_all" ]] ; then
 	echo "$(tput setaf 3) Sketching contigs without detectable virus domains or circularity or ITRs with RPS-BLAST $(tput sgr 0)"
-	. ${CENOTE_SCRIPT_DIR}/sketching_nonviral_contigs_2.0.1.sh
+	. sketching_nonviral_contigs_2.0.1.sh
 elif [[ $handle_nonviral = "no_sketch_domainless" ]]; then
 	echo "$(tput setaf 3) The -no_sketch option was used, contigs without detectable virus domains or circularity or ITRs will not be sketched $(tput sgr 0)"
 #elif [[ $handle_nonviral = "full_annotate_all" ]]; then
 #	echo "$(tput setaf 3) Fully annotating all contigs without detectable virus domains, circularity, or ITRs with RPS-BLAST $(tput sgr 0)"
-#	. ${CENOTE_SCRIPT_DIR}/full_annotate_of_putative_nonviral_contigs1.sh
+#	. full_annotate_of_putative_nonviral_contigs1.sh
 else
 	echo "$(tput setaf 3) No recognized sketch option was used, contigs without detectable virus domains or circularity or ITRs will not be sketched $(tput sgr 0)"
 fi
--- hhpredreport2tbl_mt_annotation_pipe_biowulf1_gjs_edits.pl.old	2020-03-26 13:35:13.283284750 -0500
+++ hhpredreport2tbl_mt_annotation_pipe_biowulf1_gjs_edits.pl	2020-03-26 13:35:39.687375930 -0500
@@ -1,4 +1,4 @@
-#!/bin/perl
+#!/opt/anaconda1anaconda2anaconda3/bin/perl
 use strict;
 use warnings;
 use File::Find;
--- quick_annotation_of_known_seqs1_200207.sh.old	2020-03-26 14:11:04.127709676 -0500
+++ quick_annotation_of_known_seqs1_200207.sh	2020-03-26 15:12:51.505193837 -0500
@@ -13,7 +13,7 @@
 	if [ -s ${nucl_fa%.fna}.starting_orf.1.fa ] ; then
 		circlator fixstart --genes_fa ${nucl_fa%.fna}.starting_orf.1.fa $nucl_fa ${nucl_fa%.fna}.rotate ;
 	else
-		/data/tiszamj/mike_tisza/EMBOSS-6.6.0/emboss/getorf -circular -minsize 240 -find 3 -sequence $nucl_fa -outseq ${nucl_fa%.fna}.nucl_orfs.fa ; 
+		getorf -circular -minsize 240 -find 3 -sequence $nucl_fa -outseq ${nucl_fa%.fna}.nucl_orfs.fa ; 
 
 		grep ">" ${nucl_fa%.fna}.nucl_orfs.fa > ${nucl_fa%.fna}.nucl_orfs.txt
 		cat "${nucl_fa%.fna}.nucl_orfs.txt" | while read liner ; do
@@ -54,10 +54,10 @@
 
 	taxid=$( tail -n1 ${nucl_fa%.known_species.fna}.tax_guide.blastn.tab | cut -f2 )
 	if grep -q "Inovir" ${nucl_fa%.known_species.fna}.tax_guide.blastn.out ; then
-		/data/tiszamj/mike_tisza/EMBOSS-6.6.0/emboss/getorf -find 1 -minsize 90 -sequence ${nucl_fa%.fna}.rotate.fasta -outseq ${nucl_fa%.fna}.rotate.AA.fasta ;
+		getorf -find 1 -minsize 90 -sequence ${nucl_fa%.fna}.rotate.fasta -outseq ${nucl_fa%.fna}.rotate.AA.fasta ;
 		echo "getorf for AA sequence done"
 	else
-		/data/tiszamj/mike_tisza/EMBOSS-6.6.0/emboss/getorf -find 1 -minsize 150 -sequence ${nucl_fa%.fna}.rotate.fasta -outseq ${nucl_fa%.fna}.rotate.AA.fasta ;
+		getorf -find 1 -minsize 150 -sequence ${nucl_fa%.fna}.rotate.fasta -outseq ${nucl_fa%.fna}.rotate.AA.fasta ;
 		echo "getorf for AA sequence done"
 
 	fi
@@ -66,7 +66,7 @@
 	blastp -evalue 1e-10 -num_descriptions 5 -num_threads $CPU -num_alignments 1 -db /fdb/blastdb/nr -query ${nucl_fa%.fna}.rotate.AA.sorted.fasta -out ${nucl_fa%.known_species.fna}.rotate.blastp.out ;
 
 done 
-perl ${CENOTE_SCRIPT_DIR}/blastpreport2tbl_mt_annotation_pipe_biowulf2.pl ;
+blastpreport2tbl_mt_annotation_pipe_biowulf2.pl ;
 
 for GENOME_NAME in $novel_fastas ; do
 	if grep -i -q "caudovir\|podovir\|siphovir\|myovir\|ackermannvir\|mimivir\|pandoravir\|pithovir\|marseillevir\|plasmid\|" ${GENOME_NAME%.known_species.fna}.tax_guide.blastn.out ; then
@@ -183,7 +183,7 @@
 	fi
 done
 
-${CENOTE_SCRIPT_DIR}/linux64.tbl2asn -V vb -t $base_directory/$template_file -X C -p sequin_directory/ ;
+tbl2asn -V vb -t $base_directory/$template_file -X C -p sequin_directory/ ;
 
 for fsa_file in sequin_directory/*.fsa ; do
 	fsa_name2=$( echo ${fsa_file#sequin_directory/} ) ; 
@@ -193,7 +193,7 @@
 	mv $fsa_file.temp $fsa_file
 done
 
-${CENOTE_SCRIPT_DIR}/linux64.tbl2asn -V vb -t $base_directory/$template_file -X C -p sequin_directory/ ;
+tbl2asn -V vb -t $base_directory/$template_file -X C -p sequin_directory/ ;
 
 rm *.all_start_stop.txt *.bad_starts.txt *.comb.tbl *.comb2.tbl *.good_start_orfs.txt *.hypo_start_stop.txt *.nucl_orfs.fa *.remove_hypo.txt *.log *.promer.contigs_with_ends.fa *.promer.promer *.out.hhr *.starting_orf.1.fa *.starting_orf.txt *.used_positions.txt
 echo "$(tput setaf 3) DONE WITH KNOWN VIRUSES $(tput sgr 0)"
--- rpsblastreport2tbl_mt_annotation_pipe_biowulf.pl.old	2020-03-26 13:36:00.263446988 -0500
+++ rpsblastreport2tbl_mt_annotation_pipe_biowulf.pl	2020-03-26 13:36:22.453523617 -0500
@@ -1,4 +1,4 @@
-#!/bin/perl
+#!/opt/anaconda1anaconda2anaconda3/bin/perl
 use strict;
 use warnings;
 use File::Find;
@@ -43,4 +43,4 @@
 			print OUTPUT "\n\t\t\tinference\tprotein motif:$1";			
 		}
 	}
-}
\ No newline at end of file
+}
--- rpsblastreport2tbl_mt_sketch_contigs1.pl.old	2020-03-26 13:36:37.718576332 -0500
+++ rpsblastreport2tbl_mt_sketch_contigs1.pl	2020-03-26 13:36:57.388644256 -0500
@@ -1,4 +1,4 @@
-#!/bin/perl
+#!/opt/anaconda1anaconda2anaconda3/bin/perl
 use strict;
 use warnings;
 use File::Find;
@@ -43,4 +43,4 @@
 			print OUTPUT "\n\t\t\tinference\tprotein motif:$1";			
 		}
 	}
-}
\ No newline at end of file
+}
--- rpsblastreport_to_table1.pl.old	2020-03-26 13:37:11.029691363 -0500
+++ rpsblastreport_to_table1.pl	2020-03-26 13:37:30.228757659 -0500
@@ -1,4 +1,4 @@
-#!/bin/perl
+#!/opt/anaconda1anaconda2anaconda3/bin/perl
 use strict;
 use warnings;
 use File::Find;
@@ -38,4 +38,4 @@
 			print OUTPUT "$2\t$4\n";
 		}
 	}
-}
\ No newline at end of file
+}
--- run_cenote-taker2.0.1.py.old	2020-03-26 13:39:20.238137551 -0500
+++ run_cenote-taker2.0.1.py	2020-03-26 13:58:24.609088178 -0500
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/opt/anaconda1anaconda2anaconda3/bin/python
 
 import argparse
 import sys, os
--- sketching_nonviral_contigs_200207.sh.old	2020-03-26 14:11:04.129709683 -0500
+++ sketching_nonviral_contigs_200207.sh	2020-03-26 14:25:18.909641220 -0500
@@ -24,12 +24,12 @@
 	done
 
 
-	time ls *.AA.fasta | xargs -n 1 -I {} -P $CPU -t rpsblast -evalue 1e-4 -num_descriptions 5 -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/cdd_rps_db/Cdd -query {} -line_length 100 -out {}.rpsblast1.out
+	time ls *.AA.fasta | xargs -n 1 -I {} -P $CPU -t rpsblast -evalue 1e-4 -num_descriptions 5 -num_alignments 1 -db ${CT2_DIR}/cdd_rps_db/Cdd -query {} -line_length 100 -out {}.rpsblast1.out
 
 		echo "$(tput setaf 5)RPS-BLAST of putative non-viral contigs complete.$(tput sgr 0)"
 		echo " "
 
-	perl ${CENOTE_SCRIPT_DIR}/rpsblastreport2tbl_mt_sketch_contigs1.pl ;
+	rpsblastreport2tbl_mt_sketch_contigs1.pl ;
 
 	echo "$(tput setaf 5) Looking for tRNAs in contigs; non-circular/non-ITR contigs without viral domains  $(tput sgr 0)"
 	for GENOME_NAME in $NUCL_FILES_LIST ; do
--- sketching_nonviral_contigs_2.0.1.sh.old	2020-03-26 14:11:04.131709690 -0500
+++ sketching_nonviral_contigs_2.0.1.sh	2020-03-26 14:23:52.370349306 -0500
@@ -24,12 +24,12 @@
 	done
 
 
-	time ls *.AA.fasta | xargs -n 1 -I {} -P $CPU -t rpsblast -evalue 1e-4 -num_descriptions 5 -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/cdd_rps_db/Cdd -query {} -line_length 100 -out {}.rpsblast1.out
+	time ls *.AA.fasta | xargs -n 1 -I {} -P $CPU -t rpsblast -evalue 1e-4 -num_descriptions 5 -num_alignments 1 -db ${CT2_DIR}/cdd_rps_db/Cdd -query {} -line_length 100 -out {}.rpsblast1.out
 
 		echo "$(tput setaf 5)RPS-BLAST of putative non-viral contigs complete.$(tput sgr 0)"
 		echo " "
 
-	perl ${CENOTE_SCRIPT_DIR}/rpsblastreport2tbl_mt_sketch_contigs1.pl ;
+	rpsblastreport2tbl_mt_sketch_contigs1.pl ;
 
 	echo "$(tput setaf 5) Looking for tRNAs in contigs; non-circular/non-ITR contigs without viral domains  $(tput sgr 0)"
 	for GENOME_NAME in $NUCL_FILES_LIST ; do
--- annotation_of_linear_contigs_prune_seg2.0.1.sh.old	2020-03-26 15:36:20.367035015 -0500
+++ annotation_of_linear_contigs_prune_seg2.0.1.sh	2020-03-26 19:45:00.993898547 -0500
@@ -49,7 +49,7 @@
 
 			MDYT=$( date +"%m-%d-%y---%T" )
 			echo "time update: HMMSCAN of common viral domains beginning" $MDYT
-			hmmscan --tblout ${NO_END%.fna}.AA.hmmscan2.out --cpu $CPU -E 1e-6 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a ${NO_END%.fna}.AA.sorted.fasta
+			hmmscan --tblout ${NO_END%.fna}.AA.hmmscan2.out --cpu $CPU -E 1e-6 ${CT2_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a ${NO_END%.fna}.AA.sorted.fasta
 			grep -v "^#" ${NO_END%.fna}.AA.hmmscan2.out | sed 's/ \+/	/g' | sort -u -k3,3 > ${NO_END%.fna}.AA.hmmscan2.sort.out
 			if [ ! -z "${NO_END%.fna}.AA.hmmscan2.sort.out" ] ; then
 				cut -f3 ${NO_END%.fna}.AA.hmmscan2.sort.out | awk '{ print $0" " }' > ${NO_END%.fna}.AA.called_hmmscan2.txt ; 
@@ -77,14 +77,14 @@
 	done
 	MDYT=$( date +"%m-%d-%y---%T" )
 	echo "time update: running RPSBLAST on each sequence " $MDYT
-	time ls *.no_hmmscan2.fasta | xargs -n 1 -I {} -P $CPU -t rpsblast -evalue 1e-4 -num_descriptions 5 -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/cdd_rps_db/Cdd -query {} -line_length 200 -out {}.rpsb.out ; echo "$(tput setaf 5)RPS-BLAST of "{}" complete.$(tput sgr 0)"
+	time ls *.no_hmmscan2.fasta | xargs -n 1 -I {} -P $CPU -t rpsblast -evalue 1e-4 -num_descriptions 5 -num_alignments 1 -db ${CT2_DIR}/cdd_rps_db/Cdd -query {} -line_length 200 -out {}.rpsb.out ; echo "$(tput setaf 5)RPS-BLAST of "{}" complete.$(tput sgr 0)"
 
 	for RPSB in *.no_hmmscan2.fasta.rpsb.out ; do 
 		mv $RPSB ${RPSB%.no_hmmscan2.fasta.rpsb.out}.rotate.AA.rpsblast.out
 	done
 
 
-	perl ${CENOTE_SCRIPT_DIR}/rpsblastreport2tbl_mt_annotation_pipe_biowulf.pl ;
+	rpsblastreport2tbl_mt_annotation_pipe_biowulf.pl ;
 
 	MDYT=$( date +"%m-%d-%y---%T" )
 	echo "time update: making tables for hmmscan and rpsblast outputs " $MDYT
@@ -109,7 +109,7 @@
 		fi
 	done
 
-	perl ${CENOTE_SCRIPT_DIR}/rpsblastreport_to_table1.pl
+	rpsblastreport_to_table1.pl
 
 
 	MDYT=$( date +"%m-%d-%y---%T" )
@@ -139,7 +139,7 @@
 						echo "$counter_r	X" ; 
 					done >> ${TABLE1%.HMMSCAN_TABLE.txt}.virus_signal.tab 
 				fi
-			elif [[ $INFER == *"PHA0"* ]] || grep -q "$INFER" ${CENOTE_SCRIPT_DIR}/viral_cdds_and_pfams_191028.txt ; then
+			elif [[ $INFER == *"PHA0"* ]] || grep -q "$INFER" ${CT2_DIR}/viral_cdds_and_pfams_191028.txt ; then
 				if [[ "$RPS_END" -gt "$RPS_START" ]] ; then 
 					for ((counter_f=(( $RPS_START ));counter_f<=$RPS_END;counter_f++)); do 
 						echo "$counter_f	V" ; 
@@ -190,7 +190,7 @@
 	echo "prophages not being pruned"
 
 else
-	python ${CENOTE_SCRIPT_DIR}/cenote_virus_segments_V6.py
+	cenote_virus_segments_V6.py
 
 	# reformat .fastas to get viral segments of prophage
 	VIR_COUNTER=0 
@@ -257,7 +257,7 @@
 		fi
 	fi
 
-	blastx -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/blast_DBs/virus_refseq_adinto_polinto_clean_plasmid_prot_190925 -query $vd_fa -out ${vd_fa%.fna}.tax_guide.blastx.out ;
+	blastx -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CT2_DIR}/blast_DBs/virus_refseq_adinto_polinto_clean_plasmid_prot_190925 -query $vd_fa -out ${vd_fa%.fna}.tax_guide.blastx.out ;
 	if [ ! -s "${vd_fa%.fna}.tax_guide.blastx.out" ]; then
 		echo "No homologues found" > ${vd_fa%.fna}.tax_guide.blastx.out ;
 	elif grep -i -q "circovir\|genomovir\|geminivir\|nanovir\|redondovir\|bacilladnavir\|smacovir" ${vd_fa%.fna}.tax_guide.blastx.out ; then 
@@ -292,7 +292,7 @@
 for NO_END in $virus_seg_fastas ; do
 	if grep -i -q "Caudovir\|Ackermannvir\|Herellevir\|Corticovir\|Levivir\|Tectivir\|crAss-like virus\|CrAssphage\|Cyanophage\|Microvir\microphage\|Siphoviridae\|Myoviridae\|phage\|Podovir\|Halovir\|sphaerolipovir\|pleolipovir\|plasmid\|Inovir\|Ampullavir\|Bicaudavir\|Fusellovir\|Guttavir\|Ligamenvir\|Plasmavir\|Salterprovir\|Cystovir" ${NO_END%.fna}.tax_guide.blastx.out ; then
 
-		${CENOTE_SCRIPT_DIR}/PHANOTATE/phanotate.py -f fasta -o ${NO_END%.fna}.phan.fasta $NO_END ; 
+		phanotate.py -f fasta -o ${NO_END%.fna}.phan.fasta $NO_END ; 
 		if [ "$ENFORCE_START_CODON" == "True" ] ; then
 			sed 's/ /@/g' ${NO_END%.fna}.phan.fasta | bioawk -c fastx '{ print }' | awk '{ if ($2 ~ /^[ATCG]TG/) { print ">"$1 ; print $2 }}' | sed 's/@/ /g' > ${NO_END%.fna}.phan.sort.fasta
 		else
@@ -329,7 +329,7 @@
 			echo ">"${ORF_NAME} "["$START_BASE" - "$END_BASE"]" ; echo $AA_SEQ ; 
 		done > ${NO_END%.fna}.AA.fasta
 	fi
-	hmmscan --tblout ${NO_END%.fna}.AA.hmmscan2.out --cpu $CPU -E 1e-6 ${CENOTE_SCRIPT_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a ${NO_END%.fna}.AA.fasta
+	hmmscan --tblout ${NO_END%.fna}.AA.hmmscan2.out --cpu $CPU -E 1e-6 ${CT2_DIR}/hmmscan_DBs/useful_hmms_baits_and_not2a ${NO_END%.fna}.AA.fasta
 	grep -v "^#" ${NO_END%.fna}.AA.hmmscan2.out | sed 's/ \+/	/g' | sort -u -k3,3 > ${NO_END%.fna}.AA.hmmscan2.sort.out
 		echo $NO_END "contains at least one viral or plasmid domain"
 	if [ ! -z "${NO_END%.fna}.AA.hmmscan2.sort.out" ] ; then
@@ -361,7 +361,7 @@
 	if [ -s "${vd_fa%.fna}.no_hmmscan2.fasta" ]; then
 
 		echo "$(tput setaf 5)"$vd_fa" Continuing to RPS-BLAST NCBI CDD domains database for each ORF...$(tput sgr 0)" 
-		rpsblast -evalue 1e-4 -num_descriptions 5 -num_threads $CPU -line_length 100 -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/cdd_rps_db/Cdd -query ${vd_fa%.fna}.no_hmmscan2.fasta -out ${vd_fa%.fna}.rotate.AA.rpsblast.out ;
+		rpsblast -evalue 1e-4 -num_descriptions 5 -num_threads $CPU -line_length 100 -num_alignments 1 -db ${CT2_DIR}/cdd_rps_db/Cdd -query ${vd_fa%.fna}.no_hmmscan2.fasta -out ${vd_fa%.fna}.rotate.AA.rpsblast.out ;
 		echo "$(tput setaf 5)RPS-BLAST of "${vd_fa%.fna}.no_hmmscan2.fasta" complete.$(tput sgr 0)"
 		echo " "
 	else
@@ -370,7 +370,7 @@
 	fi
 done
 
-perl ${CENOTE_SCRIPT_DIR}/rpsblastreport2tbl_mt_annotation_pipe_biowulf.pl ;
+rpsblastreport2tbl_mt_annotation_pipe_biowulf.pl ;
 for vd_fa in $virus_seg_fastas ; do
 if [ -s "${vd_fa%.fna}.NT.tbl" ]; then
 	echo "$(tput setaf 5)"$vd_fa" tbl made from RPS-BLAST hits...$(tput sgr 0)"
@@ -397,7 +397,7 @@
 	fi		
 done
 
-perl ${CENOTE_SCRIPT_DIR}/blastpreport2tbl_mt_annotation_pipe_biowulf2.pl ;
+blastpreport2tbl_mt_annotation_pipe_biowulf2.pl ;
 for feat_tbl1 in *_vs[0-9].NT.tbl ; do
 if [ -s "${feat_tbl1%.NT.tbl}.BLASTP.tbl" ]; then
 	echo "$(tput setaf 5)"${feat_tbl1%.NT.tbl}": tbl made from BLASTP hits. Splitting fasta files for HHsearch...$(tput sgr 0)"
@@ -573,14 +573,14 @@
 	if  [[ $HHSUITE_TOOL = "hhsearch" ]] ; then
 
 		echo "$(tput setaf 5)Running HHsearch on "$dark_orf" now.$(tput sgr 0)"
-		${CENOTE_SCRIPT_DIR}/hh-suite/build/src/hhsearch -i $dark_orf -d $PDB_HHSUITE -d $PFAM_HHSUITE -d $CD_HHSUITE -o ${dark_orf%.for_hhpred.fasta}.out.hhr -cpu $CPU -maxmem $MEM -p 80 -Z 20 -z 0 -b 0 -B 10 -ssm 2 -sc 1  ;
+		hhsearch -i $dark_orf -d $PDB_HHSUITE -d $PFAM_HHSUITE -d $CD_HHSUITE -o ${dark_orf%.for_hhpred.fasta}.out.hhr -cpu $CPU -maxmem $MEM -p 80 -Z 20 -z 0 -b 0 -B 10 -ssm 2 -sc 1  ;
 		cat ${dark_orf%.for_hhpred.fasta}.out.hhr >> ${dark_orf%.*.for_hhpred.fasta}.rotate.out_all.hhr ;
 		rm ${dark_orf%.for_hhpred.fasta}.out.hhr 
 		cat $dark_orf >> ${dark_orf%.*.for_hhpred.fasta}.all_hhpred_queries.AA.fasta
 		rm $dark_orf
 	elif [[ $HHSUITE_TOOL = "hhblits" ]] ; then
 		echo "$(tput setaf 5)Running HHblits on "$dark_orf" now.$(tput sgr 0)"
-		${CENOTE_SCRIPT_DIR}/hh-suite/build/src/hhblits -i $dark_orf -d $PDB_HHSUITE -d $PFAM_HHSUITE -d $CD_HHSUITE -o ${dark_orf%.for_hhpred.fasta}.out.hhr -cpu $CPU -maxmem $MEM -p 80 -Z 20 -z 0 -b 0 -B 10 -ssm 2 -sc 1  ;
+		hhblits -i $dark_orf -d $PDB_HHSUITE -d $PFAM_HHSUITE -d $CD_HHSUITE -o ${dark_orf%.for_hhpred.fasta}.out.hhr -cpu $CPU -maxmem $MEM -p 80 -Z 20 -z 0 -b 0 -B 10 -ssm 2 -sc 1  ;
 		cat ${dark_orf%.for_hhpred.fasta}.out.hhr >> ${dark_orf%.*.for_hhpred.fasta}.rotate.out_all.hhr ;
 		rm ${dark_orf%.for_hhpred.fasta}.out.hhr 
 		cat $dark_orf >> ${dark_orf%.*.for_hhpred.fasta}.all_hhpred_queries.AA.fasta
@@ -595,7 +595,7 @@
 rm *.out.hhr
 
 # Generating tbl file from HHpred results
-perl ${CENOTE_SCRIPT_DIR}/hhpredreport2tbl_mt_annotation_pipe_biowulf1_gjs_edits.pl ;
+hhpredreport2tbl_mt_annotation_pipe_biowulf1_gjs_edits.pl ;
 
 for HH_tbl1 in *.HH.tbl ; do 
 sed 's/OS=.*//g; s/ ;//g; s/similar to AA sequence:UniProtKB:>\([0-9][A-Z].*\)/protein motif:PDB:\1/g; s/UniProtKB:>tr|.*|\(.\)/UniProtKB:\1/g; s/similar to AA sequence:UniProtKB:>\([a-z].*\)/protein motif:Scop:\1/g; s/similar to AA sequence:UniProtKB:>\(PF.*\)/protein motif:PFAM:\1/g; s/ is .*//g; s/ are .*//g' $HH_tbl1 | sed '/product/ s/; [a-zA-Z0-9_]\{1,20\}//g; s/;.*//g' > ${HH_tbl1%.HH.tbl}.HH2.tbl
@@ -651,9 +651,9 @@
 
 			grep -A1 "$TAX_ORF " ${feat_tbl2%.comb3.tbl}.AA.fasta | sed '/--/d' > ${feat_tbl2%.comb3.tbl}.tax_orf.fasta
 			if [[ $STRUCTURAL_COUNT == 1 ]] || [[ $STRUCTURAL_COUNT -gt 1 ]] ; then
-				blastp -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/blast_DBs/virus_adinto_polinton_prot_190925 -query ${feat_tbl2%.comb3.tbl}.tax_orf.fasta -out ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
+				blastp -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CT2_DIR}/blast_DBs/virus_adinto_polinton_prot_190925 -query ${feat_tbl2%.comb3.tbl}.tax_orf.fasta -out ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
 			else
-				blastp -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CENOTE_SCRIPT_DIR}/blast_DBs/virus_refseq_adinto_polinto_clean_plasmid_prot_190925 -query ${feat_tbl2%.comb3.tbl}.tax_orf.fasta -out ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
+				blastp -evalue 1e-2 -outfmt "6 qseqid stitle pident evalue length" -num_threads $CPU -num_alignments 1 -db ${CT2_DIR}/blast_DBs/virus_refseq_adinto_polinto_clean_plasmid_prot_190925 -query ${feat_tbl2%.comb3.tbl}.tax_orf.fasta -out ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
 			fi
 			if [ ! -s "${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out" ]; then
 				echo "unclassified virus" > ${feat_tbl2%.comb3.tbl}.tax_guide.blastx.out ;
