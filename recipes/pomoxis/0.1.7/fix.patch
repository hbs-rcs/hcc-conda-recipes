--- Makefile	2018-03-23 06:58:32.000000000 -0500
+++ Makefile.new	2018-04-02 01:20:22.253149387 -0500
@@ -1,74 +1,13 @@
 .PHONY: scrappy install docs
 OS := $(shell uname)
 
-# for porechop on travis (or other platform with older gcc)
-CXX         ?= g++
-
 # Builds a cache of binaries which can just be copied for CI
-BINARIES=minimap2 miniasm bwa racon samtools
+# BINARIES=minimap2 miniasm bwa racon samtools
 
-BINCACHEDIR=bincache
-$(BINCACHEDIR):
-	mkdir -p $(BINCACHEDIR)
-
-$(BINCACHEDIR)/minimap2: | $(BINCACHEDIR)
-	@echo Making $(@F)
-	cd submodules/minimap2 && make
-	cp submodules/minimap2/minimap2 $@
-
-$(BINCACHEDIR)/miniasm: | $(BINCACHEDIR)
-	@echo Making $(@F)
-	cd submodules/miniasm && make
-	cp submodules/miniasm/miniasm $@
-
-$(BINCACHEDIR)/racon: | $(BINCACHEDIR)
-	@echo Making $(@F)
-	@echo GCC is $(GCC)
-	#cd submodules/racon && make modules && make -j $(RACONOS)
-	#cp submodules/racon/bin/racon$(RACONTAG) $@
-	cd submodules/racon && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
-	cd submodules/racon/build && make
-	cp submodules/racon/build/bin/racon $@
-
-
-$(BINCACHEDIR)/bwa: | $(BINCACHEDIR)
-	@echo Making $(@F)
-	cd submodules/bwa && make
-	cp submodules/bwa/bwa $@
-
-SAMVER=1.3.1
-$(BINCACHEDIR)/samtools: | $(BINCACHEDIR)
-	@echo Making $(@F)
-	# tar.bz is not a dependency, since that would cause it to be fetched
-	#   even when installing from $(BINCACHEDIR)
-	if [ ! -e submodules/samtools-${SAMVER}.tar.bz2 ]; then \
-	  cd submodules; \
-	  wget https://github.com/samtools/samtools/releases/download/${SAMVER}/samtools-${SAMVER}.tar.bz2; \
-	fi
-	cd submodules && tar -xjf samtools-${SAMVER}.tar.bz2
-	cd submodules/samtools-${SAMVER} && make
-	cp submodules/samtools-${SAMVER}/samtools $@
-
-venv: venv/bin/activate
-IN_VENV=. ./venv/bin/activate
-
-venv/bin/activate:
-	test -d venv || virtualenv venv --python=python3
-	${IN_VENV} && pip install pip --upgrade
-	${IN_VENV} && pip install numpy # needs to get done before other things
-	${IN_VENV} && pip install -r requirements.txt
-
-# These next too could be streamlined with changes to their setup.pys
-scrappy: venv
-	cd submodules/scrappie/python && make lib/libscrappie.a
-	${IN_VENV} && cd submodules/scrappie/python && pip install -r requirements.txt && python setup.py install
-
-bwapy: venv
-	cd submodules/bwapy && make bwa/libbwa.a 
-	${IN_VENV} && cd submodules/bwapy && python setup.py install
+BINCACHEDIR=/opt/anaconda1anaconda2anaconda3/bin
 
-install: venv bwapy scrappy | $(addprefix $(BINCACHEDIR)/, $(BINARIES))
-	${IN_VENV} && python setup.py install
+install:
+	python setup.py install
 
 # You can set these variables from the command line.
 SPHINXOPTS    =
@@ -83,9 +22,9 @@
 
 DOCSRC = docs
 
-docs: venv
-	${IN_VENV} && pip install sphinx sphinx_rtd_theme sphinx-argparse
-	${IN_VENV} && cd $(DOCSRC) && $(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
+docs:
+	pip install sphinx sphinx_rtd_theme sphinx-argparse
+	cd $(DOCSRC) && $(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
 	@echo
 	@echo "Build finished. The HTML pages are in $(DOCSRC)/$(BUILDDIR)/html."
 	touch $(DOCSRC)/$(BUILDDIR)/html/.nojekyll
--- setup.py	2018-03-23 06:58:32.000000000 -0500
+++ setup.py.new	2018-04-02 01:25:13.155526848 -0500
@@ -67,11 +67,11 @@
     zip_safe=False,
     test_suite='discover_tests',
     #place binaries as package data, below we'll copy them to standard path in dist
-    data_files=[
-        ('exes', [
-            'bincache/{}'.format(x, x) for x in exes
-        ])
-    ],
+#    data_files=[
+#        ('exes', [
+#            '/opt/anaconda1anaconda2anaconda3/bin/{}'.format(x, x) for x in exes
+#        ])
+#    ],
     entry_points={
         'console_scripts': [
             'split_fastx = {}.common.util:split_fastx_cmdline'.format(__pkg_name__),
@@ -113,11 +113,10 @@
     command.ensure_finalized()
     command.run()
 
-    src_dir = glob(os.path.join(dist.install_libbase, 'pomoxis-*', 'exes'))[0]
-    for exe in (os.path.join(src_dir, x) for x in os.listdir(src_dir)):
-        print("Copying", os.path.basename(exe), '->', dist.install_scripts)
-        shutil.copy(exe, dist.install_scripts)
+#    src_dir = glob(os.path.join(dist.install_libbase, 'pomoxis-*', 'exes'))[0]
+#    for exe in (os.path.join(src_dir, x) for x in os.listdir(src_dir)):
+#        print("Copying", os.path.basename(exe), '->', dist.install_scripts)
+#        shutil.copy(exe, dist.install_scripts)
     return dist.install_libbase, dist.install_scripts
 
 get_setuptools_script_dir()
-
